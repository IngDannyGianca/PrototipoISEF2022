<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbFoto.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAABGdBTUEAALGPC/xhBQAAFO1JREFUeF7t
        3V1y5LiVBlBvZVYzL47wVubZ4a4VzOa0ohlmVqpLP58kZiYAApfn4YTDn9tdpRQJXFyAzH/89//8EwA4
        mRgCALXFEACoLYYAQG0xBABqiyEAUFsMAYDaYggA1BZDAKC2GAIAtcUQAKgthgBAbTEEAGqLIQBQWwwB
        gNpiCADUFkMAoLYYAgC1xRAAqC2GAEBtMQQAaoshAFBbDAGA2mIIANQWQwCgthgCALXFEACoLYYAQG0x
        BABqiyEAUFsMAYDaYggA1BZDAKC2GAIAtcUQAKgthgBAbTEEAGqLIQBQWwwBgNpiCADUFkMAoLYYAgC1
        xRAAqC2GAEBtMQQAaoshAFBbDAGA2mIIANQWQwCgthgCALXFEACoLYYAQG0xBABqiyEAUFsMAYDaYggA
        1BZDAKC2GAIAtcUQAKgthgBAbTEEAGqLIQBQWwwBgNpiCADUFkMAoLYYAgC1xRAAqC2GAEBtMQQAaosh
        AFBbDAGA2mIIANQWQwCgthgCALXFEACoLYYAQG0xBABqiyEAUFsMAYDaYgis7a9///u/3vr169e/rv7z
        n//9+z/fevu/bT7+/9OfAawthsD8/p7YXyfxv/562fxfZy9viwbFAawrhsA8Dpro76UwgMXEEDjOuwl/
        zsl+r99FgYIAphRDYKzrpL/+hP+Ta0GgGIA5xBDo780qP02W9d26A+mzAfqLIdDHm5V+nhTPSmcAhosh
        0M5J2vut2CaAQWIIPO/a4jfpP+NaDKTPFnheDIHHWe03pxCADmII3Mfe/iAeKYRmYgjsY+I/yPaZKwTg
        OTEEvmfin4RCAB4WQ+BrJv4Jbb+T9LsCvhZD4DOn+qf34sVCsF8MgT+0+xdjWwB2iSHw223Vnyca5mZb
        AL4VQzi766pfu78C2wLwhRjCmWn3F2RbAD6JIZyRVX95L4oA+COGcDZW/SfibABcxRDOxOR/QrYEQAHA
        eWn5n54tAU4thlCdVT9/syXAScUQKjP584kigBOKIVS1DfZa/nzlJV0zUFUMoRr7/ezkXACnEUOoxOTP
        nRQBnEIMoQqTPw9SBFBeDKGC2+SfBnfYRRFAZTGE1fkWP5rxZUIUFUNYmcmf5hQBFBRDWJW2P73YDqCa
        GMKKTP70pgigkhjCam6Tv9P+9ObpAMqIIazE5M9gigBKiCGs5DIgfxigoTevDWZ5MYRVXAbiDwMzjKII
        YGkxhBX4Vj8O51sEWVgMYXYmf6ahCGBRMYSZ3Q795cEYDuBQICuKIczKiX8m5ckAlhNDmJXWP9OyFcBi
        YggzMvkzPUUAC4khzMa+P6uwFcAqYggzse/PYpwHYAkxhJlo/bMcWwEsIIYwC9/tz7K2azdd0zCLGMIs
        toFU659VeVUwU4shzEDrn+XZCmBiMYSjOfVPFQ4EMqsYwtGs/ilDF4BJxRCO5OAf5TgQyIRiCEfaBkwH
        /6jGgUCmE0M4itY/ZdkKYDIxhCM4+Ed1DgQykxjCEaz+KU8XgInEEEaz+ucsdAGYRQxhNKt/TkMXgEnE
        EEay+udsdAGYQQxhJKt/TkcXgAnEEEax+uesdAE4WgxhFG/947S8HZCDxRBGiQMjnES6J2CUGMII9v45
        PWcBOFAMYYRtAPTOf87OdwRwmBhCbw7/wW8OA3KUGEJv2v9wYxuAg8QQetsGPu1/+M02AIeIIfSk/Q/v
        2QbgCDGEnrT/4QPbABwghtBTHADh5NK9Aj3FEHrx5j/4gjcDMlgMoRftf/iCbQAGiyH0Egc+4CrdM9BL
        DKEH7X/4gW0ABooh9KD9Dz+wDcBAMYQetgHOy3/ge14KxDAxhNa8/Af28VIgRokhtGb/H3ZyDoBBYgit
        2f+HnZwDYJAYQmvbwGb/H/ZxDoAhYggt2f+H+zgHwAgxhJbs/8OdnANggBhCS/b/4U7OATBADKElBQDc
        SQHAADGElrYBzQFAuI+DgHQXQ2gpDG7AD9K9BC3FEFrxBAA8xpMA9BZDaMUTAPAgTwLQWQyhFQcA4UEO
        AtJZDKEVBQA8SAFAZzGEVraBzBMA8BhPAtBVDKGVMKgBO6V7ClqJIbTgCQB4jicB6CmG0IICAJ6jAKCn
        GEILCgB4jgKAnmIILSgA4DkKAHqKIbTgJUDwJC8DoqMYQgsKAHiSAoCOYggtKADgSQoAOoohtOAtgPAk
        bwOkoxhCCzoA8CQdADqKIbSgAwBP0gGgoxhCCwoAeJICgI5iCC0oAOBJCgA6iiG0oACAJykA6CiG0IIC
        AJ6kAKCjGEILngKAJ3kKgI5iCC3oAMCTdADoKIbQgg4APEkHgI5iCC0oAOBJCgA6iiG0oACAJykA6CiG
        0MLlu8zjoAbscrmH0r0FLcQQWlAAwHMUAPQUQ2glDWrAPumeglZiCK1sg9jLx0EN2OUl3VPQSgyhlcsg
        9mFQA/ZRANBVDKEVLwOCB3kJEJ3FEFpRAMCDFAB0FkNoxbsA4EHeAUBnMYRWPAoIj/EIIL3FEFpRAMBj
        FAD0FkNoKQ1uwPfSvQQtxRBa2gYzjwLCfTwCSHcxhJY8CQB38gQAA8QQWvIkANzJEwAMEENoyUFAuI8D
        gIwQQ2htG9ScA4B97P8zRAyhNecAYCf7/wwSQ2hNAQA7KQAYJIbQmnMAsI/9f0aJIfSwDW7OAcD37P8z
        TAyhB9sA8APtfwaKIfTgfQDwA8//M1AMoZc46AFX6Z6BXmIIvdgGgC9o/zNYDKEX2wDwBe1/Bosh9BQH
        Pzi5dK9ATzGEnmwDwAfa/xwghtCTbQD4QPufA8QQeouDIJxUukegtxhCb7YB4Eb7n4PEEHrz3QDwm3f/
        c5QYwgjb4Oe7ATg77/7nMDGEERwG5PQc/uNAMYRR4qAIJ5HuCRglhjCKw4CclsN/HCyGMIrDgJyVw38c
        LYYwki4Ap2P1zwRiCCPpAnA2Vv/MIIYwmi4Ap2H1zyRiCKPpAnAWVv/MIoZwBF0AyrP6ZyIxhCPoAlCd
        1T8ziSEcRReAsqz+mUwM4Si6AFRl9c9sYghH8h0BlOOd/0wohnC0bdD0TYFU4Rv/mFIM4Wi2AqhC659Z
        xRBm4EAgy3Pwj4nFEGaxDaK2AliV1j9TiyHMwoFAluXgH5OLIczEVgDL0fpnATGEmdwOBNoKYBUvDv6x
        ghjCbDwVwCpM/qwihjAjWwFMT+ufhcQQZqUIYFomfxYTQ5iV8wBMyr4/y4khzMx5AGZj8mdFMYTZ2Qpg
        Glr/LCqGsAJFAIcz+bOwGMIqFAEcxuTP4mIIK9kGY4cCGc17/lleDGElngxgMCf+KSGGsBpPBjCKyZ8q
        YggrUgTQm8mfSmIIq1IE0IvJn2piCCtTBNCayZ+KYgirUwTQismfqmIIFSgCeJbJn8piCFXcigCPCHIv
        j/pRXgyhEkUAdzL5cwoxhGoUAexk8uc0YghV+e4AvuTd/pxMDKEyRQCfmPw5oRhCdb9+/fpXnAg4n+1a
        SNcIVBdDOAPnAk7Pfj+nFkM4i2sRYEvgfLbfucmfs4shnI0i4ES0/OEqhjCT11V67xXb9c+xJVBZ95b/
        qGsVWoghzOLjynzEwKobUNCAVf+tgBz6Z8IzYghHu53Sz6vxcYO5bsD6hhz0u12v8c9XCDCrGMJRdk+8
        gwZV3YCFbb+79Dtt7ZvJ/y1PHDCdGMJo14n/3sl20ACvG7CcYZPtI9esQoBZxBBGunsQfWtQEXBxW+kp
        BOY1tN3+1HVrW4AJxBBGaLayHlgEXOxs+TLS6Gvgmcn/D9sCHCqG0FujAfSPwRPAtXhp/TNwv+13MHoS
        Xf3ahVcxhF46t9GHr6gUAgc5YOK//q47Xru2BRgthtDa0InygIFUITDIARP/xbBtn4N+Ps4phtDSIXvm
        20Ca/i4j3AoBhwXbeTlyYrz9PtPfqx/dAAaIIbQwwar40ENWt8JHIfC4Q9vi1+v3yN/fgUUP5xBDeNYh
        q/6vHLyamqAQWssEE5/rlzOIITxjyslu+zulv+to14lFMfDZ5TOZZKJz/XIWMYRHHN4y/dlUz12fvhiY
        aNK/cP1yNjGEe10nszxozWeiSefiOvH8KQYqnxm4Hua7/KyzTWRLFWKTXb+sK4Zwj0VXsdOupgoVBNNO
        +K+un/WKn/H2uaafB+4RQ9hj2cHzrW0gnXVyerVQQTD9hP/q+pn+/jzTz7EKWwI8JYbwk+uElAelNS22
        oroM/O8Kg3HFwe9J/uI20a82CZW7drefJ/2c8JMYwnduk00ejNZWYkX1OilfXCe7V7dJ++8JPHn7z2/e
        /rvSn7WS6+cxpkgab/vdpZ8ZvhND+Mp1kkgDUCXbz1hhwuO368R/kus2/fzwlRjCR6VXT1+5rYDT58H8
        TjPxv+dcALvFEN66Tf5psDkHHYGlnHTif0sRwC4xhFfXveA8yJyPQmBqJv4Ptns3fU7wKoZwYTD9gkJg
        Kib+b2yfS/rM4CKGYEDdQSFwKBP/TooAvhBDzs2geqfL56XdOsx1W8o1eh9FAEEMOafriupsJ/1b2wZa
        XYH2rPabcDiQd2LI+Zj8m7u+Mc+A+7g3k77rsh1FAH+LIedi8u9OMbCTSX8IRQBXMeQ8TP6DXSY3xcA7
        f0/6vyf+/LnRmiIABcCZ3Sb/NDgwygkLAhP+PBQB5xZD6jP5T+nvb9qrNDB/mPB1myajCDivGFKbyX8Z
        f75691YUzDxYv/793v6drz9D/tmYyMzXFf3EkLquA3QYAFjOp+/lT7/vHq7X0Ouz+Cb5MhQB5xNDajL5
        n8ZlQv7jdaJ+6zKBv3r97x//mY//nvxnUYgi4FxiSD23yd8gDnzH0wEnEkNqMfkDd1AEnEQMqcPkDzxA
        EXACMaQGkz/wBEVAcTGkhssN/OGGBrjHSxpbqCGGrO92ijvd0AD7bWNJGmNYXwxZm8kfaEoRUFIMWdf1
        ee50AwM8Yxtb0pjDumLImm6H/vLNC/AkhwJriSHrMfkDIygC6ogha7lN/k78AyN4PLCIGLKWyw354QYF
        6MnjgQXEkHU48Q8cwpMBy4sha3DiHziUJwOWFkPm59AfMAPnAdYVQ+a33Xj2/YEZOA+wqBgyN/v+wFSc
        B1hSDJmXyR+YkvMAy4khc7LvD8zMeYC1xJD53CZ/+/7AzJwHWEgMmY/WP7AE5wGWEUPmYvIHluI8wBJi
        yDzs+wMrch5gfjFkHtuNZN8fWI+tgOnFkDlo/QNLsxUwtRhyPK1/oAJbAfOKIcez+gdKsBUwrRhyLN/y
        B5RiK2BKMeQ4Wv9ARbYC5hNDjqP1D5RkK2A6MeQYWv9AabYCphJDjrHdIJ75ByrzXQETiSHjaf0Dp2Ar
        YBoxZCwH/4AzcSBwDjFkLKt/4FR0AaYQQ8Zx8A84JQcCDxdDxtluBAf/gDNyIPBgMWQMrX/g1GwFHCqG
        9OfgH4ADgUeKIf1Z/QNsdAEOE0P6svoH+EMX4BgxpC+rf4A3dAEOEUP6sfoH+EwXYLwY0o/VP0CgCzBc
        DOnD6h/ga7oAY8WQPqz+Ab6hCzBUDGnP6h/gZ7oA48SQ9qz+AXbQBRgmhrRl9Q+wny7AGDGkLat/gDvo
        AgwRQ9qx+ge4ny5AfzGkHat/gAfoAnQXQ9qJFzYAP0pjKu3EkDas/gGeoAvQVQxpY7uAXz5d0ADs9ZLG
        VtqIIc/79evXv8LFDMA9trE0jbE8L4Y8T/sfoAHbAN3EkOd49A+gHY8E9hFDnmP1D9CQLkAXMeQ58QIG
        4GFprOU5MeRxVv8AHegCNBdDHrddqB79A2jPI4GNxZDHOPwH0I/DgG3FkMdo/wN05J0ATcWQx2wXqPY/
        QD+2ARqKIffT/gfozzZAOzHkftr/AAN4GqCZGHK/7cLU/gfozzZAIzHkPr74B2AghwGbiCH30f4HGMg2
        QBMx5D7xAgWgmzQWc58Ysp/2P8ABbAM8LYbsp/0PcADbAE+LIfttF6LT/wDjeRrgSTFkHy//ATiOlwI9
        J4bso/0PcCDbAE+JIftsF6D2P8BxbAM8IYb8TPsf4Hi2AR4XQ37m8T+ACXgc8GEx5Gf2/wEm4BzAw2LI
        z+KFCMBwaYzmZzHke/b/AebhHMBjYsj3tP8BJmIb4CEx5HsKAICJKAAeEkO+t11wnv8HmIf3ATwghnzN
        /j/AfJwDuF8M+Zrn/wEm5H0Ad4shX7P/DzAh5wDuFkO+tl1o9v8B5uMcwJ1iyNfCRQfABNKYzddiSOYA
        IMC8HAS8TwzJ7P8DTMw5gLvEkEwBADAxBcBdYki2XWAOAALMy0HAO8SQLFxsAEwkjd1kMeQzBwAB5ucg
        4H4x5DNvAARYgDcC7hZDPnMAEGABDgLuFkM+UwAALEABsFsM+Wy7sDwBADA/TwLsFEM+CxcZABNKYzif
        xZD3PAEAsA5PAuwTQ97zBADAQjwJsEsMec8BQICFOAi4Swx5TwEAsBAFwC4x5D0FAMBCFAC7xJD3FAAA
        C1EA7BJD3lMAACxEAbBLDHnPUwAAC/EUwC4x5D3vAQBYh/cA7BNDPrMNALAA7f/dYshnugAA87P63y+G
        ZLoAABOz+r9LDPnadpH5VkCA+fgWwDvFkK/dtgIUAQDzeNH6v18M+Z4iAGAaJv8HxZB9vB8A4ED2/J8S
        Q/a7dgMcDgQYZxtzrfqfF0Mec+0I/C4GLtsDtggAnvd7PL2Mrd7w11QMAYDaYggA1BZDAKC2GAIAtcUQ
        AKgthgBAbTEEAGqLIQBQWwwBgNpiCADUFkMAoLYYAgC1xRAAqC2GAEBtMQQAaoshAFBbDAGA2mIIANQW
        QwCgthgCALXFEACoLYYAQG0xBABqiyEAUFsMAYDaYggA1BZDAKC2GAIAtcUQAKgthgBAbTEEAGqLIQBQ
        WwwBgNpiCADUFkMAoLYYAgC1xRAAqC2GAEBtMQQAaoshAFBbDAGA2mIIANQWQwCgthgCALXFEACoLYYA
        QG0xBABqiyEAUFsMAYDaYggA1BZDAKC2GAIAtcUQAKgthgBAbTEEAGqLIQBQWwwBgNpiCADUFkMAoLYY
        AgC1xRAAqC2GAEBtMQQAaoshAFBbDAGA2mIIANQWQwCgthgCALXFEACoLYYAQG0xBABqiyEAUFsMAYDa
        YggA1BZDAKC2GAIAtcUQAKgthgBAbTEEAGqLIQBQWwwBgNpiCADUFkMAoLYYAgC1xRAAqC2GAEBtMQQA
        aoshAFDZP//x/6MJjdMrEXwuAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        EEL/+hAC//oIhP/5AgT/+QAI//qAEf/9ACU=
</value>
  </data>
</root>